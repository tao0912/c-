#include <iostream>
#include< ctime>
#include<iomanip>
int FiboR(int);
int FiboNR(int);

using namespace std;

int main()
{
	int i = 0;
	int FiboX;
	clock_t time, time2, TimeRecur, TimeNonRecur;
	int n[] = { 1,5,10,15,20,25,30,35,40,45,50 };
	cout << "Interger" << setw(20) << "FiboR(sec)" << setw(20) << "FiboNR(sec)" << setw(20) << "Fibo_value" << endl;
	while (i < sizeof(n)) {
		time = clock();
		FiboR(n[i]);
		TimeRecur = clock() - time;
		cout << n[i] << setw(20) << ((float)TimeRecur) / CLOCKS_PER_SEC << setw(20);
		time2 = clock();
		FiboX = FiboNR(n[i]);
		TimeNonRecur = clock() - time2;

		
		cout << ((float)TimeNonRecur) / CLOCKS_PER_SEC << setw(20);
		cout << FiboX << endl;

		i++;
	}
	system("PAUSE");
	return 0;
}

//recursive
int FiboR(int n)
{
	if (n == 0 || n == 1)
		return 0;
	else return (FiboR(n - 1) + FiboR(n - 2));
}
//non -recursive
int FiboNR(int n)
{
	int F[1000];
	F[0] = 0;
	F[1] = 1;
	for (int i = 2; i <= n; i++)
	{
		F[i] = F[i - 1] + F[i - 2];
	}
	return (F[n]);
}
